<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：octopress | Benna's Blog]]></title>
  <link href="http://bennachen.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://bennachen.github.io/"/>
  <updated>2015-02-13T10:25:21+08:00</updated>
  <id>http://bennachen.github.io/</id>
  <author>
    <name><![CDATA[bennachen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress自定义设置]]></title>
    <link href="http://bennachen.github.io/blog/20150204/octopresszi-ding-yi-she-zhi/"/>
    <updated>2015-02-04T17:38:05+08:00</updated>
    <id>http://bennachen.github.io/blog/20150204/octopresszi-ding-yi-she-zhi</id>
    <content type="html"><![CDATA[<h3>基础设置</h3>

<p><strong>标题、副标题、作者</strong>: 依次修改<code>_config.yml</code>文件中的<code>title</code>,<code>subtitle</code>,<code>author</code>。</p>

<p><strong>文章列表的名称</strong>: 修改<code>source/blog/archives/index.html</code>的<code>title</code>。</p>

<p><strong>导航自定义</strong>: <code>source/_includes/custom/navigation.html</code>中，可进行。</p>

<p><strong>日期格式</strong>: 编辑<code>_config.yml</code>的<code>date_format</code>，格式<a href="http://www.ruby-doc.org/core-1.9.2/Time.html#method-i-strftime">点此</a>。</p>

<!-- more -->


<p><strong>首页不显示全文</strong>: 在新建的post的合适处添加<code>&lt;!--more--&gt;</code>，在首页的文章尾部会出现<code>Read on</code>。</p>

<h3>代码语法高亮</h3>

<p>官网提供了多种语法高亮的<a href="http://octopress.org/docs/blogging/code/">方法</a>，再次只记录3种：</p>

<ul>
<li>普通内嵌代码块，即含有<code>&lt;figure&gt;</code>和<code>&lt;figcaption&gt;</code>和可选下载链接</li>
<li>从本地文件中引入代码块，可具有下载链接</li>
<li>引用Gist内嵌代码</li>
</ul>


<h4>普通代码块</h4>

<p>写法如下：</p>

<pre><code>``` [language] [title] [url] [link text] [linenos:false] [start:#] [mark:#,#-#]
code snippet
```
</code></pre>

<ul>
<li>[linenos]: 高亮代码块是否添加行号</li>
<li>[start:#]: 行号从哪儿开始</li>
<li>[mark:#,#-#]: 标记某行代码</li>
</ul>


<p><code>注意</code>：书写时，三个反引号需顶格，否则高亮无法生效。还有与有序标记有所冲突，导致序号从新开始。</p>

<p>另一种写法如下(%前无需空格，由于书写展示才添加的)：</p>

<pre><code>{ % codeblock [title] [lang:language] [url] [link text] %}
code snippet
{ % endcodeblock %}
</code></pre>

<p>效果如下：</p>

<p><figure class='code'><figcaption><span>Discover if a number is prime <a href="http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/">http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/</a> Source </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="mi">1</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></p>

<h4>从本地文件引入代码块</h4>

<p>写法如下：</p>

<pre><code>{ % include_code [title] [lang:language] path/to/file %}
</code></pre>

<p>这种写法默认的代码存放地址在<code>source/downloads/code</code>,修改可编辑<code>_config.yml</code>的<code>code_dir</code>字段，详情见<a href="http://octopress.org/docs/plugins/include-code/">官方地址</a>。</p>

<h4>引用gist内嵌代码</h4>

<p>写法如下：</p>

<pre><code>{ % gist gist_id [filename] %}
</code></pre>

<p>如需要语法高亮可添加文件后缀。
效果如下：
<div><script src='https://gist.github.com/4321346.js?file=gistfile1.diff'></script>
<noscript><pre><code>@@ -590,7 +590,7 @@ class SpritesTest &lt; Test::Unit::TestCase
  it &quot;should generate a sprite from nested folders&quot; do
    css = render &lt;&lt;-SCSS
-     @import &quot;nested/*.png&quot;;
+     @import &quot;nested/**/*.png&quot;;
      @include all-nested-sprites;
    SCSS
    assert_correct css, &lt;&lt;-CSS</code></pre></noscript></div>
</p>

<h3>插图</h3>

<p>图片存放地址为<code>source/images</code>，然后在post中直接引用。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress搭建]]></title>
    <link href="http://bennachen.github.io/blog/20150204/octopressda-jian/"/>
    <updated>2015-02-04T10:25:41+08:00</updated>
    <id>http://bennachen.github.io/blog/20150204/octopressda-jian</id>
    <content type="html"><![CDATA[<h3>搭建之前</h3>

<p>官网搭建步骤<a href="http://octopress.org/docs/setup/">http://octopress.org/docs/setup/</a></p>

<p>1.安装<a href="http://git-scm.com/">Git</a>. 用<a href="http://brew.sh/index_zh-cn.html">Homebrew</a>安装或更新比较方便。安装好brew后可用如下命令诊断安装中出现的问题并提示修复方法
<code>ruby
brew doctor
</code>
之后安装git：</p>

<pre><code class="ruby">brew install git
</code></pre>

<!-- more -->


<p>2.使用<a href="http://octopress.org/docs/setup/rvm/">RVM</a>或<a href="http://octopress.org/docs/setup/rbenv/">rbenv</a>安装Ruby1.9.3以上版本</p>

<h3>搭建octopress</h3>

<pre><code class="ruby">    git clone git://github.com/imathis/octopress.git    octopress
    cd octopress

    # 安装依赖
    gem install bundler
    rbenv rehash    # If you use rbenv, rehash to be able to run the bundle command
    bundle install

    # 安装默认主题
    rake install
</code></pre>

<p>本地安装后可用如下命令，在本地4000端口进行预览：</p>

<pre><code class="ruby">rake preview
</code></pre>

<h3>部署到github pages</h3>

<p>1.拥有一个github账号<br/>
2.创建repository.<code>repository name</code>设置<code>[your_username].github.io</code>，[your_username] 是你 Github 上的账户名。  <br/>
3.终端执行：</p>

<pre><code class="ruby">rake setup_github_pages
</code></pre>

<p>根据提示输入上述创建的repo，再执行如下：</p>

<pre><code class="ruby">rake generate
rake deploy
</code></pre>

<p>需执行两条命令，不想这么麻烦？可直接使用：
<code>ruby
rake gen_deploy
</code>
即可在<a href="http://your_username.github.io/">http://your_username.github.io/</a> 看到创建的页面。太方便了！！</p>

<p>4.写博客</p>

<ul>
<li>rake new_post[&lsquo;article name&rsquo;] 在<code>octopress/source/_posts</code>下会生成该文章文件，打开文件在头部下方填入文章内容即可</li>
<li>rake generate 生成静态文件</li>
<li>rake deploy 发布文件</li>
<li>rake watch 检测文件变化，实时生成新内容</li>
<li>rake preview 在本机4000端口生成访问内容</li>
<li>rake gen_deploy 生成并发布博文</li>
</ul>


<p><strong>注意</strong>：zsh下若出现‘*’, ‘(’, ‘|’, ‘&lt;’, ‘[’, or ‘?’符号，会将其识别为查找文件名的通配符，所以会导致命令没法识别，如rake new_post[&lsquo;article name&rsquo;]  <br/>
<strong>解决方法</strong>：1)可使用rake &ldquo;new_post[article name]&rdquo;; 2)<a href="http://octopress.org/docs/blogging/">官网提供的方法</a>：添加<code>alias rake="noglob rake"</code> 到zsh的配置文件($ ~/.zshrc) 防止<code>zsh: no matches found</code>错误。按照方法2修改后记得重启下终端，否则修改没法生效。</p>
]]></content>
  </entry>
  
</feed>
